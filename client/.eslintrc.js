module.exports = {
  root: true,
  env: {
    node: true,
    browser: true,
  },
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:vue/vue3-recommended',
  ],
  parserOptions: {
    ecmaVersion: 2020,
    parser: '@typescript-eslint/parser',
    sourceType: 'module',
  },
  globals: {
    window: 'readonly',
    document: 'readonly',
    localStorage: 'readonly',
    fetch: 'readonly',
    confirm: 'readonly',
    history: 'readonly',
    location: 'readonly',
    navigator: 'readonly',
    URL: 'readonly',
    HTMLElement: 'readonly',
    HTMLIFrameElement: 'readonly',
    SVGElement: 'readonly',
    MathMLElement: 'readonly',
    Element: 'readonly',
    Node: 'readonly',
    Event: 'readonly',
    MutationObserver: 'readonly',
    ResizeObserver: 'readonly',
    FormData: 'readonly',
    Blob: 'readonly',
    File: 'readonly',
    FileReader: 'readonly',
    Response: 'readonly',
    Request: 'readonly',
    AbortController: 'readonly',
    ReadableStream: 'readonly',
    TextEncoder: 'readonly',
    TextDecoder: 'readonly',
    URLSearchParams: 'readonly',
    setTimeout: 'readonly',
    clearTimeout: 'readonly',
    setInterval: 'readonly',
    clearInterval: 'readonly',
    requestAnimationFrame: 'readonly',
    cancelAnimationFrame: 'readonly',
    queueMicrotask: 'readonly',
    btoa: 'readonly',
    atob: 'readonly',
    self: 'readonly',
    getComputedStyle: 'readonly',
    XMLHttpRequest: 'readonly',
    WebSocket: 'readonly',
    Worker: 'readonly',
    WorkerGlobalScope: 'readonly',
    OffscreenCanvas: 'readonly',
    Path2D: 'readonly',
    Comment: 'readonly',
    Buffer: 'readonly',
    setImmediate: 'readonly',
  },
  rules: {
    'no-console': process.env.NODE_ENV === 'production' ? 'warn' : 'off',
    'no-debugger': process.env.NODE_ENV === 'production' ? 'warn' : 'off',
    '@typescript-eslint/no-explicit-any': 'off',
    'no-undef': 'off',
  },
  ignorePatterns: [
    'dist/**',
    'node_modules/**',
    '*.min.js',
  ],
}; 